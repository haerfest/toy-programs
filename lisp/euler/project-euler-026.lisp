(defun max-reciprocal-cycle-length ()
  (flet ((reciprocal-cycle-length (p)
           (do ((n 1 (1+ n)) (pow 10 (* 10 pow)))
               ((zerop (mod (1- pow) p)) n))))
    (do ((max-d 0) (max 0) (d 3 (+ d 2)))
        ((> d 999) max-d)
      (unless (zerop (mod d 5))
        (let ((len (reciprocal-cycle-length d)))
          (when (> len max)
            (setf max len max-d d)))))))
